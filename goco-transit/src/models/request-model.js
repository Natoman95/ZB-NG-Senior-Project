/**
 * This represents all the data stored about a request to be a passenger on a
 * ride which another user has offered
 * 
 * This directly corresponds to the TransitRequestView model on the server
 * 
 * Requests have 2 states:
 * PENDING: (rideID == null) The linked Ride's driver has not approved the Request
 * CONFIRMED: (rideID != null) The linked Ride's driver has approved the Request
 */
class RequestModel {
  constructor(
    requestID,
    requesterUsername,
    rideID,
    origin,
    destination,
    earliestDepartureDateTime,
    latestDepartureDateTime,
    requesterNote) {
    
    this.requestID = requestID;
    this.requesterUsername = requesterUsername;
    this.rideID = rideID;
    this.origin = origin;
    this.destination = destination;
    this.earliestDepartureDateTime = earliestDepartureDateTime;
    this.latestDepartureDateTime = latestDepartureDateTime;
    this.requesterNote = requesterNote;

  }

  /* Declarations */
  requestID; // int - Primary key of a Request (auto-generated by the database)
  requesterUsername; // varchar(50) - The username of the requester
  rideID; // int - The ID of the Ride that the requester wants to join
  origin; // varchar(50) - The starting location that the requester wants to depart from
  destination; // varchar(50) - The ending location that the requester wants to travel to
  earliestDepartureDateTime; // datetime - The earliest point in time that the requester can depart
  latestDepartureDateTime; // datetime - The latest point in time that the requester can depart
  requesterNote; // varchar(MAX) - The requester's note to the Ride's driver (optional)

}

export default RequestModel;