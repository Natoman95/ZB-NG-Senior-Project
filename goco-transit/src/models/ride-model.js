/**
 * This represents all the data stored about a ride on which a user is a
 * passenger or the driver
 * 
 * This directly corresponds to the TransitRideView model on the server
 */
class RideModel {
  constructor(
    rideID,
    driverUsername,
    requestIDs,
    maxCapacity,
    origin,
    destination,
    departureDateTime,
    driverNote) {

    this.rideID = rideID;
    this.driverUsername = driverUsername;
    this.requestIDs = requestIDs;
    this.maxCapacity = maxCapacity;
    this.origin = origin;
    this.destination = destination;
    this.departureDateTime = departureDateTime;
    this.driverNote = driverNote;

  }

  /* Declarations */
  rideID; // Primary key of a Ride (auto-generated by the database)
  driverUsername; // The username of the Ride's driver
  requestIDs; // An array of the IDs of the Ride's pending Requests
  maxCapacity; // The maximum number of passengers (via approved Requests) that a Ride can contain
  origin; // The starting location that the Ride is departing from
  destination; // The ending location that the Ride is travelling to
  departureDateTime; // The point in when the Ride will depart
  driverNote; // The driver's note to potential requesters (optional)
}

export default RideModel;